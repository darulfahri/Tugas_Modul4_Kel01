{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mfaza\\\\Downloads\\\\Tugas_Modul4_Kel01\\\\src\\\\components\\\\NamaList.js\";\nimport React, { useState } from 'react';\nimport NamaForm from './NamaForm';\nimport Nama from './ListNamaMobil';\n\nfunction NamaList() {\n  const [namas, setNamas] = useState([]);\n\n  const addNama = nama => {\n    if (!nama.text || /^\\s*$/.test(nama.text)) {\n      return;\n    }\n\n    const newNamas = [nama, ...namas];\n    setNamas(newNamas);\n    console.log(...namas);\n  };\n\n  const updateNama = (namaId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setNamas(prev => prev.map(item => item.id === namaId ? newValue : item));\n  };\n\n  const removeNama = id => {\n    const removedArr = [...namas].filter(nama => nama.id !== id);\n    setNamas(removedArr);\n  };\n\n  const completeNama = id => {\n    let updatedNamas = namas.map(nama => {\n      if (nama.id === id) {\n        nama.isComplete = !nama.isComplete;\n      }\n\n      return nama;\n    });\n    setNamas(updatedNamas);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \" \"), \" \", /*#__PURE__*/React.createElement(NamaForm, {\n    onSubmit: addNama,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }), \" \", /*#__PURE__*/React.createElement(Nama, {\n    namas: namas,\n    completeNama: completeNama,\n    removeNama: removeNama,\n    updateNama: updateNama,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }\n  }), \" \");\n}\n\nexport default NamaList;","map":{"version":3,"sources":["C:/Users/Mfaza/Downloads/Tugas_Modul4_Kel01/src/components/NamaList.js"],"names":["React","useState","NamaForm","Nama","NamaList","namas","setNamas","addNama","nama","text","test","newNamas","console","log","updateNama","namaId","newValue","prev","map","item","id","removeNama","removedArr","filter","completeNama","updatedNamas","isComplete"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;AAEA,SAASC,QAAT,GAAoB;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,OAAO,GAAGC,IAAI,IAAI;AACpB,QAAI,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAlB,EAA2C;AACvC;AACH;;AAED,UAAME,QAAQ,GAAG,CAACH,IAAD,EAAO,GAAGH,KAAV,CAAjB;AAEAC,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAGR,KAAf;AACH,GATD;;AAWA,QAAMS,UAAU,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AACrC,QAAI,CAACA,QAAQ,CAACP,IAAV,IAAkB,QAAQC,IAAR,CAAaM,QAAQ,CAACP,IAAtB,CAAtB,EAAmD;AAC/C;AACH;;AAEDH,IAAAA,QAAQ,CAACW,IAAI,IAAIA,IAAI,CAACC,GAAL,CAASC,IAAI,IAAKA,IAAI,CAACC,EAAL,KAAYL,MAAZ,GAAqBC,QAArB,GAAgCG,IAAlD,CAAT,CAAR;AACH,GAND;;AAQA,QAAME,UAAU,GAAGD,EAAE,IAAI;AACrB,UAAME,UAAU,GAAG,CAAC,GAAGjB,KAAJ,EAAWkB,MAAX,CAAkBf,IAAI,IAAIA,IAAI,CAACY,EAAL,KAAYA,EAAtC,CAAnB;AAEAd,IAAAA,QAAQ,CAACgB,UAAD,CAAR;AACH,GAJD;;AAMA,QAAME,YAAY,GAAGJ,EAAE,IAAI;AACvB,QAAIK,YAAY,GAAGpB,KAAK,CAACa,GAAN,CAAUV,IAAI,IAAI;AACjC,UAAIA,IAAI,CAACY,EAAL,KAAYA,EAAhB,EAAoB;AAChBZ,QAAAA,IAAI,CAACkB,UAAL,GAAkB,CAAClB,IAAI,CAACkB,UAAxB;AACH;;AACD,aAAOlB,IAAP;AACH,KALkB,CAAnB;AAMAF,IAAAA,QAAQ,CAACmB,YAAD,CAAR;AACH,GARD;;AAUA,sBAAS,uDAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFK,oBAGO,oBACZ,QADY;AACH,IAAA,QAAQ,EAAKlB,OADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHP,oBAKF,oBACH,IADG;AACE,IAAA,KAAK,EAAKF,KADZ;AAEH,IAAA,YAAY,EAAKmB,YAFd;AAGH,IAAA,UAAU,EAAKH,UAHZ;AAIH,IAAA,UAAU,EAAKP,UAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALE,MAAT;AAaH;;AAED,eAAeV,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport NamaForm from './NamaForm';\r\nimport Nama from './ListNamaMobil';\r\n\r\nfunction NamaList() {\r\n    const [namas, setNamas] = useState([]);\r\n\r\n    const addNama = nama => {\r\n        if (!nama.text || /^\\s*$/.test(nama.text)) {\r\n            return;\r\n        }\r\n\r\n        const newNamas = [nama, ...namas];\r\n\r\n        setNamas(newNamas);\r\n        console.log(...namas);\r\n    };\r\n\r\n    const updateNama = (namaId, newValue) => {\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setNamas(prev => prev.map(item => (item.id === namaId ? newValue : item)));\r\n    };\r\n\r\n    const removeNama = id => {\r\n        const removedArr = [...namas].filter(nama => nama.id !== id);\r\n\r\n        setNamas(removedArr);\r\n    };\r\n\r\n    const completeNama = id => {\r\n        let updatedNamas = namas.map(nama => {\r\n            if (nama.id === id) {\r\n                nama.isComplete = !nama.isComplete;\r\n            }\r\n            return nama;\r\n        });\r\n        setNamas(updatedNamas);\r\n    };\r\n\r\n    return ( <\r\n        >\r\n        <\r\n        h1 > < /h1> <\r\n        NamaForm onSubmit = { addNama }\r\n        /> <\r\n        Nama namas = { namas }\r\n        completeNama = { completeNama }\r\n        removeNama = { removeNama }\r\n        updateNama = { updateNama }\r\n        /> <\r\n        />\r\n    );\r\n}\r\n\r\nexport default NamaList;"]},"metadata":{},"sourceType":"module"}